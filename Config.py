from tinydb import TinyDB, Query, where

FOLDER = 'malware_samples'


API_KEYS = {
    "FileChecker": "local-service"
}


# Returns true if 'service_name' is enabled
def is_service_enabled(service_name:str):
    if service_name == "FileChecker":
        return True
    db = __get_api_keys_db()
    return (len(db.search(where(service_name).enabled == "on"))) > 0


def __get_api_keys_db():
    return TinyDB('config.json').table('api_keys')


def retrieve_api_key(service=''):
    api_keys = __get_api_keys_db()
    if service == '':
        keys = {}
        for key in api_keys.all():
            keys.update(key)
        return keys
    else:
        key = api_keys.search(where(service).exists())
        key = list(key[0].values())
        if len(key) != 0:
            return key[0]['key']
        return {}


def save_api_key(form:dict):
    db = __get_api_keys_db()
    key = form.get('HybridAnalysis_indexer', "")
    if key != "":
        enabled = form.get("{}_enabled".format('HybridAnalysis_indexer'))
        if enabled is None:
            enabled = "off"
        ha = {'HybridAnalysis_indexer': {'key': key, 'enabled': enabled}}
        db.upsert(ha, Query().HybridAnalysis_indexer.exists())
    key = form.get('VT_indexer', "")
    if key != "":
        enabled = form.get("{}_enabled".format('VT_indexer'))
        if enabled is None:
            enabled = "off"
        vt = {'VT_indexer': {'key': key, 'enabled': enabled}}
        db.upsert(vt, Query().VT_indexer.exists())
    key = form.get('MalwareBazaar', "")
    enabled = form.get("{}_enabled".format('MalwareBazaar'))
    if enabled is None:
        enabled = "off"
    mb = {'Crawlers.MalwareBazaar': {'key': key, 'enabled': enabled}}
    db.upsert(mb, Query()['Crawlers.MalwareBazaar'].exists())
    key = form.get('MalShare', "")
    if key != "":
        enabled = form.get("{}_enabled".format('MalShare'))
        if enabled is None:
            enabled = "off"
        ms = {'Crawlers.MalShare': {'key': key, 'enabled': enabled}}
        db.upsert(ms, Query()['Crawlers.MalShare'].exists())

